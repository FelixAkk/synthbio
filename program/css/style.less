/**
 * Project Zelula
 *
 * Contextproject TI2800
 * TU Delft - University of Technology
 *
 * Authors:
 * 	Felix Akkermans, Niels Doekemeijer, Thomas van Helden
 * 	Albert ten Napel, Jan Pieter Waagmeester
 *
 * https://github.com/FelixAkk/synthbio
 *
 * @author Felix Akkermans
 */

/* SlateGrey */
@baseColor: #708090;

/* 1: Bright content on dark background, -1: Dark content on bright background */
@contrast: 1;

/* Page wide text base color */
@textColor: #FFF;

/* Determinds how much the text is blended in with the background. 0: none, 1: completely */
@textFade: 0.2;
/* Alternative base color derivative: lighten(desaturate(@baseColor, 30%), @contrast * 35%); */

@textColorFaded: fadeout(@textColor, @textFade * 100);
/* Ensure this is consistent with the dimensions of the used icon image (found in '..\img\icon-*') */

@iconSize: 24px;
/* Icon size multiplier to derive menu bar height */

@menuHeight: 1.75;

@grStart: darken(@baseColor, @contrast * 10%);

@grStop: darken(@baseColor, @contrast * 20%);

@titleWidth: 180px;

@tabWidth: @titleWidth + (@iconSize * 0.5)*2 + @iconSize;

@statusHeight: 24px; /* Height of the status bar */

@cornerRadius: 5px;

@borderHeight: 25%;

@gatesTabPadding: 10px;

@gatesWidth: 100px;

@gatesHeight: 50px;

@gatesPadding: 5px;

/* Minimum width and height of the entire app */
@minWidth: 1050px;
@minHeight: 600px;

/** Section:
 * -----------------------------------
 * Mixin declaration
 * -----------------------------------
 */
.borderDown(@baseColor, @contrast, @borderHeight) {
	border: solid darken(saturate(@baseColor, 5%), @contrast * @borderHeight) 1px;
}

.borderUp(@baseColor, @contrast, @borderHeight) {
	border: solid lighten(saturate(@baseColor, 5%), @contrast * @borderHeight) 1px;
}

.cornerRadius(@cornerRadius) {
	  -webkit-border-radius: @cornerRadius; /* Saf 3-4, iOS 1-3.2, Android ≤1.6 */
		 -moz-border-radius: @cornerRadius; /* FF 1-3.6 */
			  border-radius: @cornerRadius;
}

.gradient(@grStart, @grStop) {
	background-color: @grStop;
	background-image: -webkit-gradient(linear, left top, left bottom, from(@grStart), to(@grStop)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, @grStart, @grStop); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:	 -moz-linear-gradient(top, @grStart, @grStop); /* FF3.6 */
	background-image:	  -ms-linear-gradient(top, @grStart, @grStop); /* IE10 */
	background-image:	   -o-linear-gradient(top, @grStart, @grStop); /* Opera 11.10+ */
	background-image:		  linear-gradient(to bottom, @grStart, @grStop);
}
.unselectable() {
-webkit-touch-callout: none;
  -webkit-user-select: none;
   -khtml-user-select: none;
	 -moz-user-select: none;
	  -ms-user-select: none; /* Introduced in IE 10. See http://ie.microsoft.com/testdrive/HTML5/msUserSelect/ */
		  user-select: none;
}
.transition(@cssProperty, @time) {
-webkit-transition: @cssProperty @time ease-in-out;
   -moz-transition: @cssProperty @time ease-in-out;
	 -o-transition: @cssProperty @time ease-in-out;
	-ms-transition: @cssProperty @time ease-in-out;
		transition: @cssProperty @time ease-in-out;
}

.gateBorder() {
  -webkit-box-shadow: 0px 0px 4px 0px #ffffff; /* Saf3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
		  box-shadow: 0px 0px 4px 0px #ffffff; /* Opera 10.5, IE9, FF4+, Chrome 6+, iOS 5 */
}
.innerShadow(@horizontalOffset, @verticalOffset, @blur, @spread, @color) {
-webkit-box-shadow: inset @horizontalOffset @verticalOffset @blur @spread @color;
		box-shadow: inset @horizontalOffset @verticalOffset @blur @spread @color;
}

.flushleft{
	float:left;
}

/**
 * Selftitled class
 */
.gate-border {
	.gateBorder();
}

/** Section:
 * -----------------------------------
 * Bootstrap.css overriding
 * -----------------------------------
 */
body {
	background-color: @baseColor;
	min-width: @minWidth;
	min-height: @minHeight;
}

.navbar {
	.borderDown(@baseColor, @contrast, @borderHeight);
	border-width: 0px 0px 1px 0px; /* Bottom border only */
	box-shadow: 0 2px 10px rgba(0, 0, 0, 0.25);
	height: @iconSize * @menuHeight;
	width: 100%;
	position: relative;
	z-index: 100;
}

.navbar, .status, .summary {
	.gradient(@grStart, @grStop);
}

.nav {
	color: @textColorFaded;
	font-size: 18px;
	font-weight: bold;
	margin-bottom: 0px;

	li.dropdown > ul.dropdown-menu > li > a {
		position: relative;
		kbd {
			position: absolute;
			right: 8px;
			top: 4px;
			font-family: monospace;
		}
	}
}
#simulation-tab .nav-tabs > ul {
	margin-bottom: 0;
}
#simulation-tab .navbar .nav > li > a, .nav-tabs > li > a {
	color: lighten(@baseColor, 20%);
	&:hover {
		color: @textColorFaded;
	}
}
#simulation-tab .nav-tabs > li > a {
	&.tab-utilities {
		float: right;
	}
	font-size: 14px;
	.borderDown(@baseColor, @contrast, @borderHeight);
	border-width: 1px 1px 0px 1px;
	padding-top: 6px;
	padding-bottom: 6px;
	margin-top: 4px;
	padding-left: 12px;
	padding-right: 12px;
	margin-left: 4px;
	margin-right: 4px;

	.innerShadow(0px, 1px, 5px, -1px, rgba(0, 0, 0, 0.5));
	.gradient(lighten(@grStart, 10%), lighten(@grStop, 5%));
	
	&:hover {
		.gradient(lighten(@grStart, 15%), lighten(@grStop, 10%));
	}
}

#simulation-tab .nav-tabs > li.active > a {
	.gradient(@grStart, darken(@grStart, 5%));
	color: #FFFFFF;
}

#simulation-tab .nav-tabs {
	height: auto;
}

#simulation-tab .tab-utilities {
	z-index: 110;
	position: absolute;
	top: 5px;
	right: 5px;
	padding: 5px;
}

.navbar .nav > li > a {
	color: lighten(@baseColor, 20%);
	&:hover {
		color: @textColorFaded;
	}
}

.navbar .dropdown-menu {
	margin-top: 2px;
}

.dropdown .caret {
	margin-left: 5px;
	margin-top: 10px;
}
.navbar .nav .dropdown-toggle .caret, .navbar .nav .open.dropdown .caret {
	border-bottom-color: @textColorFaded;
	border-top-color: @textColorFaded;
}
.caret {
	opacity: 0.6;
}
.dropdown-menu a {
	font-size: 13px;
}

#files table td {
	cursor: pointer;
}
.typeahead.dropdown-menu {
	min-width: 210px;
}

.modal-footer, #grid-container {
	input, textarea, select, .uneditable-input {
		margin-bottom: 0;
	}
}

.typeahead-group {
	display: inline-block;

	div.alert {
		display: inline-block;
		margin-bottom: 0;
		padding: 2px 12px 4px 12px;
	}
	label.checkbox {
		color: inherit;

		input[type="checkbox"] {
			margin-right: 8px;
		}
	}

	input[type="text"] {
		margin-right: 0;
	  -webkit-border-bottom-right-radius: 0; /* Saf 3-4, iOS 1-3.2, Android ≤1.6 */
		 -moz-border-bottom-right-radius: 0; /* FF 1-3.6 */
			  border-bottom-right-radius: 0;
	  -webkit-border-top-right-radius: 0; /* Saf 3-4, iOS 1-3.2, Android ≤1.6 */
		 -moz-border-top-right-radius: 0; /* FF 1-3.6 */
			  border-top-right-radius: 0;
	}
	/* only apply to the button that directly succeeds an input element, further buttons will be left untouched */
	input[type="text"] + button[type="submit"].btn {
		margin-left: -5px;
	  -webkit-border-bottom-left-radius: 0; /* Saf 3-4, iOS 1-3.2, Android ≤1.6 */
		 -moz-border-bottom-left-radius: 0; /* FF 1-3.6 */
			  border-bottom-left-radius: 0;
	  -webkit-border-top-left-radius: 0; /* Saf 3-4, iOS 1-3.2, Android ≤1.6 */
		 -moz-border-top-left-radius: 0; /* FF 1-3.6 */
			  border-top-left-radius: 0;
	}
}

/* Copy defautl btn style from bootstrap (i.e. stuff like round corners, default btn-inverse style (i.e. stuff like
 * bright text, bright top shine, and override the gradient color ourselfs along with some subtle tweaks.
 */
.btn.btn-inverse.btn-synthbio {
	color: @textColorFaded;

	.borderDown(@baseColor, @contrast, @borderHeight);

	.gradient(lighten(@grStart, 10%), lighten(@grStop, 5%));

	&:hover {
		.gradient(lighten(@grStart, 15%), lighten(@grStop, 10%));
	}
}
/** Section:
 * ------------------------------
 * Application styles
 * ------------------------------
 */
#title {
	.borderDown(@baseColor, @contrast, @borderHeight);
	border-width: 0px 1px 0px 0px; /* Right border only */
	background-color: rgba(0,0,0, 0.1); /* Fade */
	float: left;
	padding: (@iconSize * 0.5) 0 (@iconSize * 0.5) (@iconSize * 0.5)*2 + @iconSize;
	width: @titleWidth;
}

#icon {
	background: url("../img/icon-small-24px.png") no-repeat;
	position: absolute;
	height: @iconSize;
	width: @iconSize;
	left: (@iconSize * 0.5 * @menuHeight) - (@iconSize * 0.5);
	top: (@iconSize * 0.5 * @menuHeight) - (@iconSize * 0.5);
	opacity: 1 - @textFade;
}

#gates-tab {
	background-color: @grStart;
	.borderDown(@baseColor, @contrast, @borderHeight);
	border-width: 0px 1px 0px 0px; /* Right and bottom border only */
	width: @tabWidth;
	bottom: @statusHeight + 1; /* Keep some distance for the status bar (+1 pixel for the border) */
	top: @iconSize * 1.75;
	color: @textColorFaded;
	overflow-y: auto;
	overflow-x: hidden;
}

#gates-tab h3 {
	margin-left: @gatesTabPadding;
	margin-top: @gatesTabPadding;
}

#gates-tab p {
	margin-left: @gatesTabPadding;
	line-height: 10px;
}

#circuit-details {
	display: inline-block;
	height: @iconSize * @menuHeight;
	position: absolute;
	right: 0px;
	color: @textColorFaded;

	i#circuit-filename {
		color: fade(@textColorFaded, 50%);
		margin-right: 10px;
	}

	button, input {
		margin: 7px;
	}
	input {
	    height: 16px;
	}
}

#chart-group {
	width: 530px;
	height: 400px;
}

#chart-separate { 
	.chart {
		width: 515px;
		height: 110px;
	}

	.chart + .chart {
		margin-top: 10px;
		padding-top: 10px;
		border-top: 2px solid #808080;
	}
}

.gates {
	.borderDown(@baseColor, @contrast, @borderHeight);
	.cornerRadius(@cornerRadius);
	.innerShadow(0, 2px, 10px, 0, rgba(0, 0, 0, 0.25));
	background-color: @baseColor;
	margin: @gatesTabPadding;
	padding: @gatesTabPadding;
}

.gate  {
	.unselectable();
	.cornerRadius(@cornerRadius);
	text-align: right;
	padding: @gatesPadding;
	cursor: pointer;
	position: relative;
	width: @gatesWidth;
	height: @gatesHeight;

	&:hover {
		background-color: rgba(255,255,255, 0.15);
	}
}
/**
 * Some gate markup special for special cases
 */
#gates-transport .gate {
	margin-top: -50px;

	h4 {
		display: none;
	}

	p {
		display: none;
	}
}

#gates-tab .gate {
	width: auto;
	height: auto;

	.mask {
		width: @gatesWidth;
		height: @gatesHeight;
		position: absolute;
		/**
		 * This is so that the mask position corresponds with the internal padding of gates and fully covers the SVG.
		 */
		left: @gatesPadding;
		top: @gatesPadding;
	}

	img {
		float: left;
	}
	
	p {
		margin: 0px;
	}
}

#grid-container {
	 /* Keep some distance for the status bar and gates-tab (+1 pixel for the border) */
	left: @tabWidth + 1;
	bottom: @statusHeight + 1;
	top: @iconSize * 1.75;
	min-width: @minWidth - @tabWidth;
	background-color: lighten(@baseColor, 20%);
	overflow: auto;

	.innerShadow(0, 2px, 10px, 0, rgba(0, 0, 0, 0.25));
	/*.borderDown(@baseColor, @contrast, 10%); */
	/*margin: 5px; */

	/**
	 * Only little extension to the general gate class is neeeded.
	 */
	.gate {
		.gateBorder();
		position: absolute;
	}

	/**
	 * Order of this declaration being after .gate is important! These must overwrite gate!
	 */
	.input, .output {
		width: auto;
		top: 35%;
		min-height: 140px;
		padding: 0;
		.cornerRadius(0);
		.borderDown(@baseColor, @contrast, @borderHeight);
		 -webkit-box-shadow: 0px 0px 8px 0px rgba(0,0,0, 0.5); /* Saf3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
				 box-shadow: 0px 0px 8px 0px rgba(0,0,0, 0.5); /* Opera 10.5, IE9, FF4+, Chrome 6+, iOS 5 */

		.handle {
			display: block;
			color: @textColorFaded;
			text-shadow: 1px -1px 2px rgba(0, 0, 0, 0.5);
			text-align: center;
			border-width: 0px 0px 1px 0px;
			padding: 4px 0 8px 0;

			.icon-grip {
				background-image: url("../img/grip.png");
				background-position: 3px 5px;
				opacity: 0.5;
				margin: 0 5px;
			}
		}
	}

	.input {
		left: 10px;
		right: auto;
		.handle {
			.gradient(darken(spin(@baseColor, -15), 10), spin(@baseColor, -15));
		}
		background-color: spin(@baseColor, -15);
		&:hover {
			background-color: spin(@baseColor, -15);
		}
	}

	.output {
		left: auto;
		right: 10px;
		.handle {
			.gradient(darken(spin(@baseColor, 15), 10), spin(@baseColor, 15));
		}
		background-color: spin(@baseColor, 15);
		&:hover {
			background-color: spin(@baseColor, 15);
		}
	}
}


._jsPlumb_overlay.popover-inner {
	width: auto;
	.unselectable();
	overflow: visible;
	z-index: 20;

	/* always dispaly as block */
	.popover-content {
		padding: 7px;
		display: block;

		select {
			width: auto;
		}
	}
	/* but only round on all sides (bottom only is default) if it's the direct child (not preceded by a .popover-title)
	 * because if there is a title is should not be rounded at the top so it connects with the title block like normal
	 */
	& > .popover-content {
		.cornerRadius(3px);
	}
}


#grid {
}

#simulation-tab {
	top: auto;
	/* Keep some distance for the status bar and gates tab (+1 pixel for the border) */
	left: @tabWidth + 1;
	bottom: @statusHeight + 1;
	min-height: 150px;
	background-color: @baseColor;
	.borderUp(@baseColor, @contrast, @borderHeight);
	border-width: 1px 0px 0px 0px; /* Top border only */
	.innerShadow(2px, 0, 10px, 0, rgba(0, 0, 0, 0.25));
	color: @textColorFaded;
	z-index: 30;
	.transition(bottom, 0.3s);

	.navbar {
	    cursor: n-resize;
	}
}

.subscript {
	font-size: 9px;
}

.stretch {
	position: absolute;
	right: 0;
	top: 0;
	bottom: 0;
	left: 0;
}

.status {
	background-color: @grStart;
	.borderDown(@baseColor, @contrast, @borderHeight);
	color: @textColorFaded;
	border-width: 1px 0px 0px 0px; /* Top border only */
	bottom: 0;
	top: auto;
	height: @statusHeight;
	min-width: @minWidth;
	left: 0;
	line-height: 24px;
	position: absolute;
	width: 100%;
	z-index: 40;
	
	#info-icon {
		height: @statusHeight - 8;
		width: @statusHeight - 8;
		opacity: 1 - @textFade;
		padding: 0 6px;
	}
	
	#ping {
		float: right;
		margin-right: 5px;
		
		.icon-connecting {
			background-position: 0 0;
		}
		.icon-connected {
			background-position: -16px 0;
		}
		.icon-failed {
			background-position: -32px 0;
		}

		[class^="icon-"], [class*=" icon-"] {
			background: no-repeat scroll url('../img/connection-status.png');
			height: @statusHeight - 8;
			width: @statusHeight - 8;
			opacity: 1 - @textFade;
			vertical-align: middle;
			margin: 0 6px;
		}
	}
}

#gates-transport {
	bottom: @statusHeight + 1; /* Keep some distance for the status bar (+1 pixel for the border) */
	top: @iconSize * 1.75;
	overflow: hidden;
	display: none;
}

/*
 * Styles for the define-inputs dialog
 */
#define-inputs{
	.x-axis{
		width: 50px;
		float: right;
		text-align: right;
	}
	.signal{
		clear: right;
		border-bottom: 1px dotted gray;
		padding: 10px 4px;
	}
	.toggle-highlow{
		display: inline-block;
		width: 10px;
		cursor: pointer;
	}
	.levels{
		display: inline-block;
		white-space: nowrap;
		cursor: default;
		height: 20px;
		vertical-align: middle;
		
		.tick{
			display: inline-block;
			background-color: #eee;
			width: 6px;
			height: 20px;
			cursor: pointer;
		}
		.tick:hover{
			background-color: lighten(#eee, 2);
		}
		.low{ border-bottom: 1.5px solid black; }
		.high{ border-top: 1.5px solid black; }

		.low + .high{
			border-left: 1px solid black;
			width: 5px;
		}
		.high + .low{
			border-left: 1px solid black;
			width: 5px;
		}
		.tick.changing{
			border-top: 0px solid;
			border-bottom: 0px solid;
			background-color: darken(#eee, 4);
			border-left: 0px !important;
			border-left: 0px !important;
			width: 6px !important; 
		}
		.tick.changed{
			background-color: #f2dede;
		}
		
	}
}

#validate-alert.invalid .modal-body{
	background-color: #f2dede;
}

/** Section:
 * ------------------------------
 * Modal styles
 * ------------------------------
 */

.modal-alert-fader {
	overflow: hidden;
	height: 0px;
	.transition(height, 0.2s);
}
